name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Debug Secrets
        run: |
          echo "Checking if Firebase secrets are set..."
          if [ -n "${{ secrets.FIREBASE_API_KEY }}" ]; then
            echo "FIREBASE_API_KEY is set"
          else
            echo "FIREBASE_API_KEY is missing"
          fi
          if [ -n "${{ secrets.FIREBASE_AUTH_DOMAIN }}" ]; then
            echo "FIREBASE_AUTH_DOMAIN is set"
          else
            echo "FIREBASE_AUTH_DOMAIN is missing"
          fi
          if [ -n "${{ secrets.FIREBASE_PROJECT_ID }}" ]; then
            echo "FIREBASE_PROJECT_ID is set"
          else
            echo "FIREBASE_PROJECT_ID is missing"
          fi
          if [ -n "${{ secrets.FIREBASE_STORAGE_BUCKET }}" ]; then
            echo "FIREBASE_STORAGE_BUCKET is set"
          else
            echo "FIREBASE_STORAGE_BUCKET is missing"
          fi
          if [ -n "${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}" ]; then
            echo "FIREBASE_MESSAGING_SENDER_ID is set"
          else
            echo "FIREBASE_MESSAGING_SENDER_ID is missing"
          fi
          if [ -n "${{ secrets.FIREBASE_APP_ID }}" ]; then
            echo "FIREBASE_APP_ID is set"
          else
            echo "FIREBASE_APP_ID is missing"
          fi

      - name: Create env file
        run: |
          echo "NEXT_PUBLIC_FIREBASE_API_KEY=${{ secrets.FIREBASE_API_KEY }}" >> .env.production
          echo "NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=${{ secrets.FIREBASE_AUTH_DOMAIN }}" >> .env.production
          echo "NEXT_PUBLIC_FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }}" >> .env.production
          echo "NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=${{ secrets.FIREBASE_STORAGE_BUCKET }}" >> .env.production
          echo "NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}" >> .env.production
          echo "NEXT_PUBLIC_FIREBASE_APP_ID=${{ secrets.FIREBASE_APP_ID }}" >> .env.production

      - name: Verify env file
        run: |
          echo "Checking if .env.production file exists and has content..."
          if [ -f .env.production ]; then
            echo ".env.production exists"
            echo "Number of environment variables set: $(grep -c '^NEXT_PUBLIC_FIREBASE' .env.production)"
            echo "Environment variables in .env.production:"
            cat .env.production | sed 's/=.*/=REDACTED/' # Show variable names but hide values
          else
            echo ".env.production is missing"
            exit 1
          fi

      - name: Build
        run: npm run build
        env:
          NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
          NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
          NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
          NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}

      - name: Verify build output
        run: |
          echo "Checking build output..."
          if [ -d "out" ]; then
            echo "Build directory exists"
            echo "Checking for environment variables in build output..."
            if grep -r "NEXT_PUBLIC_FIREBASE" out/; then
              echo "Found Firebase configuration in build output"
            else
              echo "Warning: No Firebase configuration found in build output"
            fi
          else
            echo "Build directory is missing"
            exit 1
          fi

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./out 