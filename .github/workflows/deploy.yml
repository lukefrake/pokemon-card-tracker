name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: github-pages

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Dependencies
        run: yarn install

      - name: Debug Firebase Secrets
        run: |
          echo "Checking Firebase configuration..."
          echo "API_KEY: ${FIREBASE_API_KEY:+set}"
          echo "AUTH_DOMAIN: ${FIREBASE_AUTH_DOMAIN:+set}"
          echo "PROJECT_ID: ${FIREBASE_PROJECT_ID:+set}"
          echo "STORAGE_BUCKET: ${FIREBASE_STORAGE_BUCKET:+set}"
          echo "MESSAGING_SENDER_ID: ${FIREBASE_MESSAGING_SENDER_ID:+set}"
          echo "APP_ID: ${FIREBASE_APP_ID:+set}"

      - name: Create .env.production file
        run: |
          cat > .env.production << EOL
          NEXT_PUBLIC_FIREBASE_API_KEY=${{ secrets.FIREBASE_API_KEY }}
          NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=${{ secrets.FIREBASE_AUTH_DOMAIN }}
          NEXT_PUBLIC_FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }}
          NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=${{ secrets.FIREBASE_STORAGE_BUCKET }}
          NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
          NEXT_PUBLIC_FIREBASE_APP_ID=${{ secrets.FIREBASE_APP_ID }}
          NEXT_PUBLIC_BUILD_TIME=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
          NEXT_PUBLIC_COMMIT_SHA=${GITHUB_SHA}
          EOL

      - name: Verify .env.production file
        run: |
          echo "Checking .env.production file..."
          cat .env.production | grep -v "KEY"

      - name: Build
        env:
          NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
          NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
          NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
          NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
          NEXT_PUBLIC_BUILD_TIME: $(date -u +'%Y-%m-%dT%H:%M:%SZ')
          NEXT_PUBLIC_COMMIT_SHA: ${GITHUB_SHA}
        run: yarn build

      - name: Debug Build Output
        run: |
          echo "Checking build output structure..."
          ls -la out/
          
          echo "\nChecking for environment variables in JavaScript files..."
          find out/ -type f -name "*.js" -exec grep -l "firebase" {} \;
          
          echo "\nChecking specific files for Firebase initialization..."
          for file in $(find out/ -type f -name "*.js"); do
            if grep -l "initializeApp" "$file" > /dev/null; then
              echo "Found Firebase init in: $file"
              echo "File contents:"
              cat "$file" | grep -A 10 -B 10 "initializeApp"
            fi
          done
          
          echo "\nChecking for Firebase configuration..."
          for file in $(find out/ -type f -name "*.js"); do
            if grep -l "FIREBASE" "$file" > /dev/null; then
              echo "Found Firebase config in: $file"
              echo "File contents (excluding sensitive data):"
              cat "$file" | grep -v "KEY" | grep -A 5 -B 5 "FIREBASE"
            fi
          done

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./out 